{
    "hints": {
        "confirm_attendance()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_poa_id()uint64": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "claim_poa(axfer)void": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMucG9hLmNvbnRyYWN0LlByb29mT2ZBdHRlbmRhbmNlLmNsZWFyX3N0YXRlX3Byb2dyYW06CiAgICAvLyBzbWFydF9jb250cmFjdHMvcG9hL2NvbnRyYWN0LnB5OjQKICAgIC8vIGNsYXNzIFByb29mT2ZBdHRlbmRhbmNlKGFsZ29weS5BUkM0Q29udHJhY3QpOgogICAgaW50IDEKICAgIHJldHVybgo="
    },
    "state": {
        "global": {
            "num_byte_slices": 1,
            "num_uints": 2
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {
                "asset_url": {
                    "type": "bytes",
                    "key": "asset_url"
                },
                "max_attendees": {
                    "type": "uint64",
                    "key": "max_attendees"
                },
                "total_attendees": {
                    "type": "uint64",
                    "key": "total_attendees"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "ProofOfAttendance",
        "methods": [
            {
                "name": "confirm_attendance",
                "args": [],
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_poa_id",
                "args": [],
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "claim_poa",
                "args": [
                    {
                        "type": "axfer",
                        "name": "opt_in_txn"
                    }
                ],
                "returns": {
                    "type": "void"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}